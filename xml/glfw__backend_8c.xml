<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="glfw__backend_8c" kind="file" language="C++">
    <compoundname>glfw_backend.c</compoundname>
    <includes refid="glfw__utils_8h" local="yes">utils/glfw/glfw_utils.h</includes>
    <incdepgraph>
      <node id="12">
        <label>../glad/glad.h</label>
      </node>
      <node id="15">
        <label>../linmath.h</label>
      </node>
      <node id="1">
        <label>backends/glfw_backend.c</label>
        <link refid="glfw__backend_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>../../gooey_backend.h</label>
        <link refid="gooey__backend_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>utils/glfw/glfw_utils.h</label>
        <link refid="glfw__utils_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>GLFW/glfw3.h</label>
      </node>
      <node id="13">
        <label>freetype2/ft2build.h</label>
      </node>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="5">
        <label>stdio.h</label>
      </node>
      <node id="6">
        <label>stdlib.h</label>
      </node>
      <node id="7">
        <label>string.h</label>
      </node>
      <node id="8">
        <label>unistd.h</label>
      </node>
      <node id="10">
        <label>utils/gooey_event.h</label>
      </node>
      <node id="11">
        <label>utils/gooey_widgets.h</label>
      </node>
      <node id="9">
        <label>utils/themes/theme_parser.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structGooeyBackendContext" prot="public">GooeyBackendContext</innerclass>
    <sectiondef kind="var">
      <memberdef kind="variable" id="glfw__backend_8c_1a4e82150bc8b31b39e30d81cc2fc99084" prot="public" static="yes" mutable="no">
        <type><ref refid="structGooeyBackendContext" kindref="compound">GooeyBackendContext</ref></type>
        <definition>GooeyBackendContext ctx</definition>
        <argsstring></argsstring>
        <name>ctx</name>
        <initializer>= {0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backends/glfw_backend.c" line="19" column="28" bodyfile="backends/glfw_backend.c" bodystart="19" bodyend="19"/>
      </memberdef>
      <memberdef kind="variable" id="glfw__backend_8c_1a6aa6e441c89fcaaa30ca52639bf06def" prot="public" static="no" mutable="no">
        <type><ref refid="structGooeyBackend" kindref="compound">GooeyBackend</ref></type>
        <definition>GooeyBackend glfw_backend</definition>
        <argsstring></argsstring>
        <name>glfw_backend</name>
        <initializer>= {
    .Init = <ref refid="glfw__backend_8c_1acec6ad9cc1163f0d9dd3992ba53f21f4" kindref="member">glfw_init</ref>,
    .CreateWindow = <ref refid="glfw__backend_8c_1a887a2affbc83b6470b54dd239941c4f5" kindref="member">glfw_create_window</ref>,
    .DestroyWindow = <ref refid="glfw__backend_8c_1a974e784e9467bb65634a4a080694f3bf" kindref="member">glfw_destroy_window</ref>,
    .UpdateBackground = <ref refid="glfw__backend_8c_1a4accf774f962735ae9519a9e79e6496d" kindref="member">glfw_update_background</ref>,
    .Cleanup = <ref refid="glfw__backend_8c_1a245407cf2a7362a9f23db837e1746297" kindref="member">glfw_cleanup</ref>,
    .Render = <ref refid="glfw__backend_8c_1aa845e35bbb57b8d42bc9efdaed128a6c" kindref="member">glfw_render</ref>,
    .HandleEvents = <ref refid="glfw__backend_8c_1acac99e1cd1e24cf673c7a817217a6fd4" kindref="member">glfw_handle_events</ref>,
    .FillArc = <ref refid="glfw__backend_8c_1af186e17eb7eaff26244beec4cdc125d4" kindref="member">glfw_fill_arc</ref>,
    .FillRectangle = <ref refid="glfw__backend_8c_1a42c92e339d4e0101627b4e683b523947" kindref="member">glfw_fill_rectangle</ref>,
    .DrawRectangle = <ref refid="glfw__backend_8c_1adf01ca716791ba40436d453882cffccc" kindref="member">glfw_draw_rectangle</ref>,
    .DrawLine = <ref refid="glfw__backend_8c_1a843d0bf0f2185575bd3f7244b377bfac" kindref="member">glfw_draw_line</ref>,
    .SetForeground = <ref refid="glfw__backend_8c_1a8f2b676e2393ee8424d43e1cf3ac59c2" kindref="member">glfw_set_foreground</ref>,
    .GetTextWidth = <ref refid="glfw__backend_8c_1adcd4a2eb541c5b3ce4d9ecdc8a110297" kindref="member">glfw_get_text_width</ref>,
    .DrawText = <ref refid="glfw__backend_8c_1ab45d87c9e8cdf6ba864f73b29f49d09b" kindref="member">glfw_draw_text</ref>,
    .GetKeyFromCode = <ref refid="glfw__backend_8c_1aa60b2474a238e701535d8269b117fb75" kindref="member">glfw_get_key_from_code</ref>,
    .Clear = <ref refid="glfw__backend_8c_1a81150c7a9d1f82a5f6ad30c5b6a31321" kindref="member">glfw_clear</ref>}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backends/glfw_backend.c" line="562" column="14" bodyfile="backends/glfw_backend.c" bodystart="562" bodyend="578"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="glfw__backend_8c_1a4c7164db83d9424e788c03bc55a6c393" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void check_shader_compile</definition>
        <argsstring>(GLuint shader)</argsstring>
        <name>check_shader_compile</name>
        <param>
          <type>GLuint</type>
          <declname>shader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backends/glfw_backend.c" line="21" column="6" bodyfile="backends/glfw_backend.c" bodystart="21" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="glfw__backend_8c_1a5c5e474c82d59d3570f8ba8a8854b5b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void check_shader_link</definition>
        <argsstring>(GLuint program)</argsstring>
        <name>check_shader_link</name>
        <param>
          <type>GLuint</type>
          <declname>program</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backends/glfw_backend.c" line="34" column="6" bodyfile="backends/glfw_backend.c" bodystart="34" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="glfw__backend_8c_1a76c6084335d944db2b604aaa048cbfb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setup_shaders</definition>
        <argsstring>()</argsstring>
        <name>setup_shaders</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backends/glfw_backend.c" line="47" column="6" bodyfile="backends/glfw_backend.c" bodystart="47" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="glfw__backend_8c_1a42c92e339d4e0101627b4e683b523947" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glfw_fill_rectangle</definition>
        <argsstring>(int x, int y, int width, int height, long unsigned int color)</argsstring>
        <name>glfw_fill_rectangle</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>long unsigned int</type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backends/glfw_backend.c" line="113" column="6" bodyfile="backends/glfw_backend.c" bodystart="113" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="glfw__backend_8c_1a8f2b676e2393ee8424d43e1cf3ac59c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glfw_set_foreground</definition>
        <argsstring>(long unsigned int color)</argsstring>
        <name>glfw_set_foreground</name>
        <param>
          <type>long unsigned int</type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backends/glfw_backend.c" line="155" column="6" bodyfile="backends/glfw_backend.c" bodystart="155" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="glfw__backend_8c_1adf01ca716791ba40436d453882cffccc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glfw_draw_rectangle</definition>
        <argsstring>(int x, int y, int width, int height, long unsigned int color)</argsstring>
        <name>glfw_draw_rectangle</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>long unsigned int</type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backends/glfw_backend.c" line="160" column="6" bodyfile="backends/glfw_backend.c" bodystart="160" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="glfw__backend_8c_1a843d0bf0f2185575bd3f7244b377bfac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glfw_draw_line</definition>
        <argsstring>(int x1, int y1, int x2, int y2, long unsigned int color)</argsstring>
        <name>glfw_draw_line</name>
        <param>
          <type>int</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y2</declname>
        </param>
        <param>
          <type>long unsigned int</type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backends/glfw_backend.c" line="198" column="6" bodyfile="backends/glfw_backend.c" bodystart="198" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="glfw__backend_8c_1af186e17eb7eaff26244beec4cdc125d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glfw_fill_arc</definition>
        <argsstring>(int x_center, int y_center, int width, int height, int angle1, int angle2)</argsstring>
        <name>glfw_fill_arc</name>
        <param>
          <type>int</type>
          <declname>x_center</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y_center</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>int</type>
          <declname>angle1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>angle2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backends/glfw_backend.c" line="232" column="6" bodyfile="backends/glfw_backend.c" bodystart="232" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="glfw__backend_8c_1a6e6d1771a9242858811be0a3569838fa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void error_callback</definition>
        <argsstring>(int error, const char *description)</argsstring>
        <name>error_callback</name>
        <param>
          <type>int</type>
          <declname>error</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>description</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backends/glfw_backend.c" line="274" column="13" bodyfile="backends/glfw_backend.c" bodystart="274" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="glfw__backend_8c_1a6d1a8981b70f74fc60c1428f080da820" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void key_callback</definition>
        <argsstring>(GLFWwindow *window, int key, int scancode, int action, int mods)</argsstring>
        <name>key_callback</name>
        <param>
          <type>GLFWwindow *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>scancode</declname>
        </param>
        <param>
          <type>int</type>
          <declname>action</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mods</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backends/glfw_backend.c" line="279" column="13" bodyfile="backends/glfw_backend.c" bodystart="279" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="glfw__backend_8c_1a9803baff403bffdc908cd9e77351d965" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void click_callback</definition>
        <argsstring>(GLFWwindow *window, int button, int action, int mods)</argsstring>
        <name>click_callback</name>
        <param>
          <type>GLFWwindow *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>int</type>
          <declname>button</declname>
        </param>
        <param>
          <type>int</type>
          <declname>action</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mods</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backends/glfw_backend.c" line="293" column="13" bodyfile="backends/glfw_backend.c" bodystart="293" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="glfw__backend_8c_1af2a5304c26ae5b122f6eaeaa68be68af" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void cursor_callback</definition>
        <argsstring>(GLFWwindow *window, double posX, double posY)</argsstring>
        <name>cursor_callback</name>
        <param>
          <type>GLFWwindow *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>double</type>
          <declname>posX</declname>
        </param>
        <param>
          <type>double</type>
          <declname>posY</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backends/glfw_backend.c" line="301" column="13" bodyfile="backends/glfw_backend.c" bodystart="301" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="glfw__backend_8c_1a09b5df3c529f6c6e3503bac31dd36685" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void refresh_callback</definition>
        <argsstring>(GLFWwindow *window)</argsstring>
        <name>refresh_callback</name>
        <param>
          <type>GLFWwindow *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backends/glfw_backend.c" line="307" column="13" bodyfile="backends/glfw_backend.c" bodystart="307" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="glfw__backend_8c_1a7d60de3025f9499eafde5380f83d92b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int glfw_init_ft</definition>
        <argsstring>()</argsstring>
        <name>glfw_init_ft</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backends/glfw_backend.c" line="312" column="5" bodyfile="backends/glfw_backend.c" bodystart="312" bodyend="374"/>
      </memberdef>
      <memberdef kind="function" id="glfw__backend_8c_1acec6ad9cc1163f0d9dd3992ba53f21f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int glfw_init</definition>
        <argsstring>()</argsstring>
        <name>glfw_init</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backends/glfw_backend.c" line="376" column="5" bodyfile="backends/glfw_backend.c" bodystart="376" bodyend="397"/>
      </memberdef>
      <memberdef kind="function" id="glfw__backend_8c_1ab45d87c9e8cdf6ba864f73b29f49d09b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glfw_draw_text</definition>
        <argsstring>(int x, int y, const char *text, unsigned long color)</argsstring>
        <name>glfw_draw_text</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backends/glfw_backend.c" line="399" column="6" bodyfile="backends/glfw_backend.c" bodystart="399" bodyend="441"/>
      </memberdef>
      <memberdef kind="function" id="glfw__backend_8c_1a887a2affbc83b6470b54dd239941c4f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structGooeyWindow" kindref="compound">GooeyWindow</ref></type>
        <definition>GooeyWindow glfw_create_window</definition>
        <argsstring>(const char *title, int width, int height)</argsstring>
        <name>glfw_create_window</name>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backends/glfw_backend.c" line="443" column="13" bodyfile="backends/glfw_backend.c" bodystart="443" bodyend="483"/>
      </memberdef>
      <memberdef kind="function" id="glfw__backend_8c_1acac99e1cd1e24cf673c7a817217a6fd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GooeyEvent</type>
        <definition>GooeyEvent glfw_handle_events</definition>
        <argsstring>()</argsstring>
        <name>glfw_handle_events</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backends/glfw_backend.c" line="485" column="12" bodyfile="backends/glfw_backend.c" bodystart="485" bodyend="498"/>
      </memberdef>
      <memberdef kind="function" id="glfw__backend_8c_1a974e784e9467bb65634a4a080694f3bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glfw_destroy_window</definition>
        <argsstring>()</argsstring>
        <name>glfw_destroy_window</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backends/glfw_backend.c" line="500" column="6" bodyfile="backends/glfw_backend.c" bodystart="500" bodyend="507"/>
      </memberdef>
      <memberdef kind="function" id="glfw__backend_8c_1a81150c7a9d1f82a5f6ad30c5b6a31321" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glfw_clear</definition>
        <argsstring>()</argsstring>
        <name>glfw_clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backends/glfw_backend.c" line="509" column="6" bodyfile="backends/glfw_backend.c" bodystart="509" bodyend="512"/>
      </memberdef>
      <memberdef kind="function" id="glfw__backend_8c_1a245407cf2a7362a9f23db837e1746297" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glfw_cleanup</definition>
        <argsstring>()</argsstring>
        <name>glfw_cleanup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backends/glfw_backend.c" line="514" column="6" bodyfile="backends/glfw_backend.c" bodystart="514" bodyend="523"/>
      </memberdef>
      <memberdef kind="function" id="glfw__backend_8c_1a4accf774f962735ae9519a9e79e6496d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glfw_update_background</definition>
        <argsstring>()</argsstring>
        <name>glfw_update_background</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backends/glfw_backend.c" line="525" column="6" bodyfile="backends/glfw_backend.c" bodystart="525" bodyend="531"/>
      </memberdef>
      <memberdef kind="function" id="glfw__backend_8c_1aa845e35bbb57b8d42bc9efdaed128a6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glfw_render</definition>
        <argsstring>()</argsstring>
        <name>glfw_render</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backends/glfw_backend.c" line="533" column="6" bodyfile="backends/glfw_backend.c" bodystart="533" bodyend="545"/>
      </memberdef>
      <memberdef kind="function" id="glfw__backend_8c_1adcd4a2eb541c5b3ce4d9ecdc8a110297" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float glfw_get_text_width</definition>
        <argsstring>(const char *text, int length)</argsstring>
        <name>glfw_get_text_width</name>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backends/glfw_backend.c" line="547" column="7" bodyfile="backends/glfw_backend.c" bodystart="547" bodyend="555"/>
      </memberdef>
      <memberdef kind="function" id="glfw__backend_8c_1aa60b2474a238e701535d8269b117fb75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * glfw_get_key_from_code</definition>
        <argsstring>(GooeyEvent *gooey_event)</argsstring>
        <name>glfw_get_key_from_code</name>
        <param>
          <type>GooeyEvent *</type>
          <declname>gooey_event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="backends/glfw_backend.c" line="557" column="6" bodyfile="backends/glfw_backend.c" bodystart="557" bodyend="560"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="glfw__utils_8h" kindref="compound">utils/glfw/glfw_utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2" refid="structGooeyBackendContext" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4"><highlight class="normal"><sp/><sp/><sp/><sp/>GooeyEvent<sp/>*current_event;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/>GLFWwindow<sp/>*window;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/>GLuint<sp/>text_program;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>GLuint<sp/>shape_program;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>GLuint<sp/>text_vao;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>GLuint<sp/>text_vbo;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>GLuint<sp/>shape_vao;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>GLuint<sp/>shape_vbo;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>mat4x4<sp/>projection;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structCharacter" kindref="compound">Character</ref><sp/>characters[128];</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>font_path[256];</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>selected_color;</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}<sp/><ref refid="structGooeyBackendContext" kindref="compound">GooeyBackendContext</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal">;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structGooeyBackendContext" kindref="compound">GooeyBackendContext</ref><sp/>ctx<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="glfw__backend_8c_1a4c7164db83d9424e788c03bc55a6c393" kindref="member">check_shader_compile</ref>(GLuint<sp/>shader)</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>GLint<sp/>success;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>glGetShaderiv(shader,<sp/>GL_COMPILE_STATUS,<sp/>&amp;success);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!success)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>infoLog[512];</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glGetShaderInfoLog(shader,<sp/>512,<sp/>NULL,<sp/>infoLog);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>Shader<sp/>compilation<sp/>failed\n%s\n&quot;</highlight><highlight class="normal">,<sp/>infoLog);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="glfw__backend_8c_1a5c5e474c82d59d3570f8ba8a8854b5b5" kindref="member">check_shader_link</ref>(GLuint<sp/>program)</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>GLint<sp/>success;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>glGetProgramiv(program,<sp/>GL_LINK_STATUS,<sp/>&amp;success);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!success)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>infoLog[512];</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glGetProgramInfoLog(program,<sp/>512,<sp/>NULL,<sp/>infoLog);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>Program<sp/>linking<sp/>failed\n%s\n&quot;</highlight><highlight class="normal">,<sp/>infoLog);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="glfw__backend_8c_1a76c6084335d944db2b604aaa048cbfb0" kindref="member">setup_shaders</ref>()</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>GLuint<sp/>text_vertex_shader<sp/>=<sp/>glCreateShader(GL_VERTEX_SHADER);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>glShaderSource(text_vertex_shader,<sp/>1,<sp/>&amp;text_vertex_shader_source,<sp/>NULL);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>glCompileShader(text_vertex_shader);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glfw__backend_8c_1a4c7164db83d9424e788c03bc55a6c393" kindref="member">check_shader_compile</ref>(text_vertex_shader);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>GLuint<sp/>text_fragment_shader<sp/>=<sp/>glCreateShader(GL_FRAGMENT_SHADER);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>glShaderSource(text_fragment_shader,<sp/>1,<sp/>&amp;text_fragment_shader_source,<sp/>NULL);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>glCompileShader(text_fragment_shader);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glfw__backend_8c_1a4c7164db83d9424e788c03bc55a6c393" kindref="member">check_shader_compile</ref>(text_fragment_shader);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx.<ref refid="structGooeyBackendContext_1a4bd0df668ca931b24173943074340cdd" kindref="member">text_program</ref><sp/>=<sp/>glCreateProgram();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>glAttachShader(ctx.<ref refid="structGooeyBackendContext_1a4bd0df668ca931b24173943074340cdd" kindref="member">text_program</ref>,<sp/>text_vertex_shader);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>glAttachShader(ctx.<ref refid="structGooeyBackendContext_1a4bd0df668ca931b24173943074340cdd" kindref="member">text_program</ref>,<sp/>text_fragment_shader);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>glLinkProgram(ctx.<ref refid="structGooeyBackendContext_1a4bd0df668ca931b24173943074340cdd" kindref="member">text_program</ref>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glfw__backend_8c_1a5c5e474c82d59d3570f8ba8a8854b5b5" kindref="member">check_shader_link</ref>(ctx.<ref refid="structGooeyBackendContext_1a4bd0df668ca931b24173943074340cdd" kindref="member">text_program</ref>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>glDeleteShader(text_vertex_shader);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>glDeleteShader(text_fragment_shader);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>glGenVertexArrays(1,<sp/>&amp;ctx.<ref refid="structGooeyBackendContext_1af3fa500d9a6e3144316be4d9099fb8c5" kindref="member">text_vao</ref>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>glGenBuffers(1,<sp/>&amp;ctx.<ref refid="structGooeyBackendContext_1a5575ea2dfd6047cd7857801e9d2d972a" kindref="member">text_vbo</ref>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindVertexArray(ctx.<ref refid="structGooeyBackendContext_1af3fa500d9a6e3144316be4d9099fb8c5" kindref="member">text_vao</ref>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindBuffer(GL_ARRAY_BUFFER,<sp/>ctx.<ref refid="structGooeyBackendContext_1a5575ea2dfd6047cd7857801e9d2d972a" kindref="member">text_vbo</ref>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>glBufferData(GL_ARRAY_BUFFER,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>*<sp/>6<sp/>*<sp/>4,<sp/>NULL,<sp/>GL_DYNAMIC_DRAW);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>glEnableVertexAttribArray(0);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>glVertexAttribPointer(0,<sp/>4,<sp/>GL_FLOAT,<sp/>GL_FALSE,<sp/>4<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">),<sp/>0);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindBuffer(GL_ARRAY_BUFFER,<sp/>0);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindVertexArray(0);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>GLuint<sp/>shape_vertex_shader<sp/>=<sp/>glCreateShader(GL_VERTEX_SHADER);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>glShaderSource(shape_vertex_shader,<sp/>1,<sp/>&amp;rectangle_vertex_shader,<sp/>NULL);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>glCompileShader(shape_vertex_shader);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glfw__backend_8c_1a4c7164db83d9424e788c03bc55a6c393" kindref="member">check_shader_compile</ref>(shape_vertex_shader);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>GLuint<sp/>shape_fragment_shader<sp/>=<sp/>glCreateShader(GL_FRAGMENT_SHADER);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>glShaderSource(shape_fragment_shader,<sp/>1,<sp/>&amp;rectangle_fragment_shader,<sp/>NULL);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>glCompileShader(shape_fragment_shader);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glfw__backend_8c_1a4c7164db83d9424e788c03bc55a6c393" kindref="member">check_shader_compile</ref>(shape_fragment_shader);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx.<ref refid="structGooeyBackendContext_1a67ce9eb0babbd1fa9736dc20c488195b" kindref="member">shape_program</ref><sp/>=<sp/>glCreateProgram();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>glAttachShader(ctx.<ref refid="structGooeyBackendContext_1a67ce9eb0babbd1fa9736dc20c488195b" kindref="member">shape_program</ref>,<sp/>shape_vertex_shader);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>glAttachShader(ctx.<ref refid="structGooeyBackendContext_1a67ce9eb0babbd1fa9736dc20c488195b" kindref="member">shape_program</ref>,<sp/>shape_fragment_shader);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>glLinkProgram(ctx.<ref refid="structGooeyBackendContext_1a67ce9eb0babbd1fa9736dc20c488195b" kindref="member">shape_program</ref>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glfw__backend_8c_1a5c5e474c82d59d3570f8ba8a8854b5b5" kindref="member">check_shader_link</ref>(ctx.<ref refid="structGooeyBackendContext_1a67ce9eb0babbd1fa9736dc20c488195b" kindref="member">shape_program</ref>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>glDeleteShader(shape_vertex_shader);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>glDeleteShader(shape_fragment_shader);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>glGenVertexArrays(1,<sp/>&amp;ctx.<ref refid="structGooeyBackendContext_1a056b1bcff76cc69918617d136806b684" kindref="member">shape_vao</ref>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindVertexArray(ctx.<ref refid="structGooeyBackendContext_1a056b1bcff76cc69918617d136806b684" kindref="member">shape_vao</ref>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>glGenBuffers(1,<sp/>&amp;ctx.<ref refid="structGooeyBackendContext_1a4e0ddeb9ffb13d6f10f0d744a79f224c" kindref="member">shape_vbo</ref>);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindBuffer(GL_ARRAY_BUFFER,<sp/>ctx.<ref refid="structGooeyBackendContext_1a4e0ddeb9ffb13d6f10f0d744a79f224c" kindref="member">shape_vbo</ref>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>GLint<sp/>position_attrib<sp/>=<sp/>glGetAttribLocation(ctx.<ref refid="structGooeyBackendContext_1a67ce9eb0babbd1fa9736dc20c488195b" kindref="member">shape_program</ref>,<sp/></highlight><highlight class="stringliteral">&quot;pos&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>glEnableVertexAttribArray(position_attrib);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>glVertexAttribPointer(position_attrib,<sp/>2,<sp/>GL_FLOAT,<sp/>GL_FALSE,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structVertex" kindref="compound">Vertex</ref>),<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)offsetof(<ref refid="structVertex" kindref="compound">Vertex</ref>,<sp/>pos));</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>GLint<sp/>col_attrib<sp/>=<sp/>glGetAttribLocation(ctx.<ref refid="structGooeyBackendContext_1a67ce9eb0babbd1fa9736dc20c488195b" kindref="member">shape_program</ref>,<sp/></highlight><highlight class="stringliteral">&quot;col&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>glEnableVertexAttribArray(col_attrib);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>glVertexAttribPointer(col_attrib,<sp/>3,<sp/>GL_FLOAT,<sp/>GL_FALSE,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structVertex" kindref="compound">Vertex</ref>),<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)offsetof(<ref refid="structVertex" kindref="compound">Vertex</ref>,<sp/>col));</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="glfw__backend_8c_1a42c92e339d4e0101627b4e683b523947" kindref="member">glfw_fill_rectangle</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>color)</highlight></codeline>
<codeline lineno="114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ndc_x,<sp/>ndc_y;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ndc_width,<sp/>ndc_height;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>vec3<sp/>color_rgb;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glfw__utils_8c_1a3b7a43b2bac2bc38f84265d53c96b45c" kindref="member">convert_coords_to_ndc</ref>(ctx.<ref refid="structGooeyBackendContext_1a3c63abc83f45a7005d9b7184dbf737b5" kindref="member">window</ref>,<sp/>&amp;ndc_x,<sp/>&amp;ndc_y,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glfw__utils_8c_1aed0c0032266afcda853ab5f0f272ac53" kindref="member">convert_dimension_to_ndc</ref>(ctx.<ref refid="structGooeyBackendContext_1a3c63abc83f45a7005d9b7184dbf737b5" kindref="member">window</ref>,<sp/>&amp;ndc_width,<sp/>&amp;ndc_height,<sp/>width,<sp/>height);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glfw__utils_8c_1af7dff0b6a435ddada85fe5fcaaf6054c" kindref="member">convert_hex_to_rgb</ref>(&amp;color_rgb,<sp/>color);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structVertex" kindref="compound">Vertex</ref><sp/>vertices[6];</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>6;<sp/>i++)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertices[i].<ref refid="structVertex_1a5b638095649d7861df43787ec9c02a69" kindref="member">col</ref>[0]<sp/>=<sp/>color_rgb[0];</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertices[i].<ref refid="structVertex_1a5b638095649d7861df43787ec9c02a69" kindref="member">col</ref>[1]<sp/>=<sp/>color_rgb[1];</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertices[i].<ref refid="structVertex_1a5b638095649d7861df43787ec9c02a69" kindref="member">col</ref>[2]<sp/>=<sp/>color_rgb[2];</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[0].<ref refid="structVertex_1abb5a5cf5005ab937369bba05fb2f29a2" kindref="member">pos</ref>[0]<sp/>=<sp/>ndc_x;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[0].<ref refid="structVertex_1abb5a5cf5005ab937369bba05fb2f29a2" kindref="member">pos</ref>[1]<sp/>=<sp/>ndc_y;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[1].<ref refid="structVertex_1abb5a5cf5005ab937369bba05fb2f29a2" kindref="member">pos</ref>[0]<sp/>=<sp/>ndc_x<sp/>+<sp/>ndc_width;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[1].<ref refid="structVertex_1abb5a5cf5005ab937369bba05fb2f29a2" kindref="member">pos</ref>[1]<sp/>=<sp/>ndc_y;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[2].<ref refid="structVertex_1abb5a5cf5005ab937369bba05fb2f29a2" kindref="member">pos</ref>[0]<sp/>=<sp/>ndc_x;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[2].<ref refid="structVertex_1abb5a5cf5005ab937369bba05fb2f29a2" kindref="member">pos</ref>[1]<sp/>=<sp/>ndc_y<sp/>+<sp/>ndc_height;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[3].<ref refid="structVertex_1abb5a5cf5005ab937369bba05fb2f29a2" kindref="member">pos</ref>[0]<sp/>=<sp/>ndc_x<sp/>+<sp/>ndc_width;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[3].<ref refid="structVertex_1abb5a5cf5005ab937369bba05fb2f29a2" kindref="member">pos</ref>[1]<sp/>=<sp/>ndc_y;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[4].<ref refid="structVertex_1abb5a5cf5005ab937369bba05fb2f29a2" kindref="member">pos</ref>[0]<sp/>=<sp/>ndc_x<sp/>+<sp/>ndc_width;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[4].<ref refid="structVertex_1abb5a5cf5005ab937369bba05fb2f29a2" kindref="member">pos</ref>[1]<sp/>=<sp/>ndc_y<sp/>+<sp/>ndc_height;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[5].<ref refid="structVertex_1abb5a5cf5005ab937369bba05fb2f29a2" kindref="member">pos</ref>[0]<sp/>=<sp/>ndc_x;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[5].<ref refid="structVertex_1abb5a5cf5005ab937369bba05fb2f29a2" kindref="member">pos</ref>[1]<sp/>=<sp/>ndc_y<sp/>+<sp/>ndc_height;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>glUseProgram(ctx.<ref refid="structGooeyBackendContext_1a67ce9eb0babbd1fa9736dc20c488195b" kindref="member">shape_program</ref>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindBuffer(GL_ARRAY_BUFFER,<sp/>ctx.<ref refid="structGooeyBackendContext_1a4e0ddeb9ffb13d6f10f0d744a79f224c" kindref="member">shape_vbo</ref>);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>glBufferData(GL_ARRAY_BUFFER,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(vertices),<sp/>vertices,<sp/>GL_DYNAMIC_DRAW);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindVertexArray(ctx.<ref refid="structGooeyBackendContext_1a056b1bcff76cc69918617d136806b684" kindref="member">shape_vao</ref>);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>glDrawArrays(GL_TRIANGLES,<sp/>0,<sp/>6);</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="glfw__backend_8c_1a8f2b676e2393ee8424d43e1cf3ac59c2" kindref="member">glfw_set_foreground</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>color)</highlight></codeline>
<codeline lineno="156"><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx.<ref refid="structGooeyBackendContext_1ad890be48675d35a27f5f7587eaa3b2a9" kindref="member">selected_color</ref><sp/>=<sp/>color;</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="glfw__backend_8c_1adf01ca716791ba40436d453882cffccc" kindref="member">glfw_draw_rectangle</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>color)</highlight></codeline>
<codeline lineno="161"><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ndc_x,<sp/>ndc_y;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ndc_width,<sp/>ndc_height;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>vec3<sp/>color_rgb;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glfw__utils_8c_1a3b7a43b2bac2bc38f84265d53c96b45c" kindref="member">convert_coords_to_ndc</ref>(ctx.<ref refid="structGooeyBackendContext_1a3c63abc83f45a7005d9b7184dbf737b5" kindref="member">window</ref>,<sp/>&amp;ndc_x,<sp/>&amp;ndc_y,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glfw__utils_8c_1aed0c0032266afcda853ab5f0f272ac53" kindref="member">convert_dimension_to_ndc</ref>(ctx.<ref refid="structGooeyBackendContext_1a3c63abc83f45a7005d9b7184dbf737b5" kindref="member">window</ref>,<sp/>&amp;ndc_width,<sp/>&amp;ndc_height,<sp/>width,<sp/>height);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glfw__utils_8c_1af7dff0b6a435ddada85fe5fcaaf6054c" kindref="member">convert_hex_to_rgb</ref>(&amp;color_rgb,<sp/>color);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structVertex" kindref="compound">Vertex</ref><sp/>vertices[4];</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>4;<sp/>i++)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertices[i].<ref refid="structVertex_1a5b638095649d7861df43787ec9c02a69" kindref="member">col</ref>[0]<sp/>=<sp/>color_rgb[0];</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertices[i].<ref refid="structVertex_1a5b638095649d7861df43787ec9c02a69" kindref="member">col</ref>[1]<sp/>=<sp/>color_rgb[1];</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertices[i].<ref refid="structVertex_1a5b638095649d7861df43787ec9c02a69" kindref="member">col</ref>[2]<sp/>=<sp/>color_rgb[2];</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[0].<ref refid="structVertex_1abb5a5cf5005ab937369bba05fb2f29a2" kindref="member">pos</ref>[0]<sp/>=<sp/>ndc_x;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[0].<ref refid="structVertex_1abb5a5cf5005ab937369bba05fb2f29a2" kindref="member">pos</ref>[1]<sp/>=<sp/>ndc_y;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[1].<ref refid="structVertex_1abb5a5cf5005ab937369bba05fb2f29a2" kindref="member">pos</ref>[0]<sp/>=<sp/>ndc_x<sp/>+<sp/>ndc_width;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[1].<ref refid="structVertex_1abb5a5cf5005ab937369bba05fb2f29a2" kindref="member">pos</ref>[1]<sp/>=<sp/>ndc_y;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[2].<ref refid="structVertex_1abb5a5cf5005ab937369bba05fb2f29a2" kindref="member">pos</ref>[0]<sp/>=<sp/>ndc_x<sp/>+<sp/>ndc_width;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[2].<ref refid="structVertex_1abb5a5cf5005ab937369bba05fb2f29a2" kindref="member">pos</ref>[1]<sp/>=<sp/>ndc_y<sp/>+<sp/>ndc_height;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[3].<ref refid="structVertex_1abb5a5cf5005ab937369bba05fb2f29a2" kindref="member">pos</ref>[0]<sp/>=<sp/>ndc_x;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[3].<ref refid="structVertex_1abb5a5cf5005ab937369bba05fb2f29a2" kindref="member">pos</ref>[1]<sp/>=<sp/>ndc_y<sp/>+<sp/>ndc_height;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>glUseProgram(ctx.<ref refid="structGooeyBackendContext_1a67ce9eb0babbd1fa9736dc20c488195b" kindref="member">shape_program</ref>);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindBuffer(GL_ARRAY_BUFFER,<sp/>ctx.<ref refid="structGooeyBackendContext_1a4e0ddeb9ffb13d6f10f0d744a79f224c" kindref="member">shape_vbo</ref>);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>glBufferData(GL_ARRAY_BUFFER,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(vertices),<sp/>vertices,<sp/>GL_DYNAMIC_DRAW);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindVertexArray(ctx.<ref refid="structGooeyBackendContext_1a056b1bcff76cc69918617d136806b684" kindref="member">shape_vao</ref>);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>glDrawArrays(GL_LINE_LOOP,<sp/>0,<sp/>4);</highlight></codeline>
<codeline lineno="196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="glfw__backend_8c_1a843d0bf0f2185575bd3f7244b377bfac" kindref="member">glfw_draw_line</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y2,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>color)</highlight></codeline>
<codeline lineno="199"><highlight class="normal">{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ndc_x1,<sp/>ndc_y1;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ndc_x2,<sp/>ndc_y2;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>vec3<sp/>color_rgb;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glfw__utils_8c_1a3b7a43b2bac2bc38f84265d53c96b45c" kindref="member">convert_coords_to_ndc</ref>(ctx.<ref refid="structGooeyBackendContext_1a3c63abc83f45a7005d9b7184dbf737b5" kindref="member">window</ref>,<sp/>&amp;ndc_x1,<sp/>&amp;ndc_y1,<sp/>x1,<sp/>y1);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glfw__utils_8c_1a3b7a43b2bac2bc38f84265d53c96b45c" kindref="member">convert_coords_to_ndc</ref>(ctx.<ref refid="structGooeyBackendContext_1a3c63abc83f45a7005d9b7184dbf737b5" kindref="member">window</ref>,<sp/>&amp;ndc_x2,<sp/>&amp;ndc_y2,<sp/>x2,<sp/>y2);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glfw__utils_8c_1af7dff0b6a435ddada85fe5fcaaf6054c" kindref="member">convert_hex_to_rgb</ref>(&amp;color_rgb,<sp/>color);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structVertex" kindref="compound">Vertex</ref><sp/>vertices[2];</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>2;<sp/>i++)</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertices[i].<ref refid="structVertex_1a5b638095649d7861df43787ec9c02a69" kindref="member">col</ref>[0]<sp/>=<sp/>color_rgb[0];</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertices[i].<ref refid="structVertex_1a5b638095649d7861df43787ec9c02a69" kindref="member">col</ref>[1]<sp/>=<sp/>color_rgb[1];</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertices[i].<ref refid="structVertex_1a5b638095649d7861df43787ec9c02a69" kindref="member">col</ref>[2]<sp/>=<sp/>color_rgb[2];</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[0].<ref refid="structVertex_1abb5a5cf5005ab937369bba05fb2f29a2" kindref="member">pos</ref>[0]<sp/>=<sp/>ndc_x1;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[0].<ref refid="structVertex_1abb5a5cf5005ab937369bba05fb2f29a2" kindref="member">pos</ref>[1]<sp/>=<sp/>ndc_y1;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[1].<ref refid="structVertex_1abb5a5cf5005ab937369bba05fb2f29a2" kindref="member">pos</ref>[0]<sp/>=<sp/>ndc_x2;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[1].<ref refid="structVertex_1abb5a5cf5005ab937369bba05fb2f29a2" kindref="member">pos</ref>[1]<sp/>=<sp/>ndc_y2;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>glUseProgram(ctx.<ref refid="structGooeyBackendContext_1a67ce9eb0babbd1fa9736dc20c488195b" kindref="member">shape_program</ref>);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindBuffer(GL_ARRAY_BUFFER,<sp/>ctx.<ref refid="structGooeyBackendContext_1a4e0ddeb9ffb13d6f10f0d744a79f224c" kindref="member">shape_vbo</ref>);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>glBufferData(GL_ARRAY_BUFFER,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(vertices),<sp/>vertices,<sp/>GL_DYNAMIC_DRAW);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindVertexArray(ctx.<ref refid="structGooeyBackendContext_1a056b1bcff76cc69918617d136806b684" kindref="member">shape_vao</ref>);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>glDrawArrays(GL_LINES,<sp/>0,<sp/>2);</highlight></codeline>
<codeline lineno="230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="glfw__backend_8c_1af186e17eb7eaff26244beec4cdc125d4" kindref="member">glfw_fill_arc</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x_center,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y_center,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>angle1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>angle2)</highlight></codeline>
<codeline lineno="233"><highlight class="normal">{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>segments<sp/>=<sp/>10;<sp/></highlight><highlight class="comment">//<sp/>less<sp/>complex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ndc_x_center,<sp/>ndc_y_center;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glfw__utils_8c_1a3b7a43b2bac2bc38f84265d53c96b45c" kindref="member">convert_coords_to_ndc</ref>(ctx.<ref refid="structGooeyBackendContext_1a3c63abc83f45a7005d9b7184dbf737b5" kindref="member">window</ref>,<sp/>&amp;ndc_x_center,<sp/>&amp;ndc_y_center,<sp/>x_center,<sp/>y_center);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>vec3<sp/>color_rgb;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glfw__utils_8c_1af7dff0b6a435ddada85fe5fcaaf6054c" kindref="member">convert_hex_to_rgb</ref>(&amp;color_rgb,<sp/>ctx.<ref refid="structGooeyBackendContext_1ad890be48675d35a27f5f7587eaa3b2a9" kindref="member">selected_color</ref>);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structVertex" kindref="compound">Vertex</ref><sp/>vertices[segments<sp/>+<sp/>2];</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[0].<ref refid="structVertex_1abb5a5cf5005ab937369bba05fb2f29a2" kindref="member">pos</ref>[0]<sp/>=<sp/>ndc_x_center;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[0].<ref refid="structVertex_1abb5a5cf5005ab937369bba05fb2f29a2" kindref="member">pos</ref>[1]<sp/>=<sp/>ndc_y_center;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[0].<ref refid="structVertex_1a5b638095649d7861df43787ec9c02a69" kindref="member">col</ref>[0]<sp/>=<sp/>color_rgb[0];</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[0].<ref refid="structVertex_1a5b638095649d7861df43787ec9c02a69" kindref="member">col</ref>[1]<sp/>=<sp/>color_rgb[1];</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>vertices[0].<ref refid="structVertex_1a5b638095649d7861df43787ec9c02a69" kindref="member">col</ref>[2]<sp/>=<sp/>color_rgb[2];</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;=<sp/>segments;<sp/>++i)</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>angle<sp/>=<sp/>(float)i<sp/>/<sp/>segments<sp/>*<sp/>2.0f<sp/>*<sp/>M_PI;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>x_center<sp/>+<sp/>(width<sp/>*<sp/>0.5f<sp/>*<sp/>cosf(angle));</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>y_center<sp/>+<sp/>(height<sp/>*<sp/>0.5f<sp/>*<sp/>sinf(angle));</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ndc_x,<sp/>ndc_y;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="glfw__utils_8c_1a3b7a43b2bac2bc38f84265d53c96b45c" kindref="member">convert_coords_to_ndc</ref>(ctx.<ref refid="structGooeyBackendContext_1a3c63abc83f45a7005d9b7184dbf737b5" kindref="member">window</ref>,<sp/>&amp;ndc_x,<sp/>&amp;ndc_y,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertices[i<sp/>+<sp/>1].<ref refid="structVertex_1abb5a5cf5005ab937369bba05fb2f29a2" kindref="member">pos</ref>[0]<sp/>=<sp/>ndc_x;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertices[i<sp/>+<sp/>1].<ref refid="structVertex_1abb5a5cf5005ab937369bba05fb2f29a2" kindref="member">pos</ref>[1]<sp/>=<sp/>ndc_y;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertices[i<sp/>+<sp/>1].<ref refid="structVertex_1a5b638095649d7861df43787ec9c02a69" kindref="member">col</ref>[0]<sp/>=<sp/>color_rgb[0];</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertices[i<sp/>+<sp/>1].<ref refid="structVertex_1a5b638095649d7861df43787ec9c02a69" kindref="member">col</ref>[1]<sp/>=<sp/>color_rgb[1];</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertices[i<sp/>+<sp/>1].<ref refid="structVertex_1a5b638095649d7861df43787ec9c02a69" kindref="member">col</ref>[2]<sp/>=<sp/>color_rgb[2];</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>glUseProgram(ctx.<ref refid="structGooeyBackendContext_1a67ce9eb0babbd1fa9736dc20c488195b" kindref="member">shape_program</ref>);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindBuffer(GL_ARRAY_BUFFER,<sp/>ctx.<ref refid="structGooeyBackendContext_1a4e0ddeb9ffb13d6f10f0d744a79f224c" kindref="member">shape_vbo</ref>);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>glBufferData(GL_ARRAY_BUFFER,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(vertices),<sp/>vertices,<sp/>GL_DYNAMIC_DRAW);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindVertexArray(ctx.<ref refid="structGooeyBackendContext_1a056b1bcff76cc69918617d136806b684" kindref="member">shape_vao</ref>);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>glDrawArrays(GL_TRIANGLE_FAN,<sp/>0,<sp/>segments<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="272"><highlight class="normal">}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>error_callback(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>error,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*description)</highlight></codeline>
<codeline lineno="275"><highlight class="normal">{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Error:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>description);</highlight></codeline>
<codeline lineno="277"><highlight class="normal">}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>key_callback(GLFWwindow<sp/>*window,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scancode,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>action,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mods)</highlight></codeline>
<codeline lineno="280"><highlight class="normal">{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(key<sp/>==<sp/>GLFW_KEY_ESCAPE<sp/>&amp;&amp;<sp/>action<sp/>==<sp/>GLFW_PRESS)</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx.<ref refid="structGooeyBackendContext_1a76a21c109ff3cda8d04c7a45b536dd2b" kindref="member">current_event</ref>-&gt;type<sp/>=<sp/>GOOEY_EVENT_WINDOW_CLOSE;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(action<sp/>==<sp/>GLFW_PRESS<sp/>&amp;&amp;<sp/>(key<sp/>&gt;=<sp/>65<sp/>&amp;&amp;<sp/>key<sp/>&lt;=<sp/>90<sp/>||<sp/>key<sp/>==<sp/>259))</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx.<ref refid="structGooeyBackendContext_1a76a21c109ff3cda8d04c7a45b536dd2b" kindref="member">current_event</ref>-&gt;type<sp/>=<sp/>GOOEY_EVENT_KEY_PRESS;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx.<ref refid="structGooeyBackendContext_1a76a21c109ff3cda8d04c7a45b536dd2b" kindref="member">current_event</ref>-&gt;data.key_press.keycode<sp/>=<sp/>key;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal">}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>click_callback(GLFWwindow<sp/>*window,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>button,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>action,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mods)</highlight></codeline>
<codeline lineno="294"><highlight class="normal">{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(button<sp/>==<sp/>GLFW_MOUSE_BUTTON_LEFT<sp/>&amp;&amp;<sp/>action<sp/>==<sp/>GLFW_PRESS)</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx.<ref refid="structGooeyBackendContext_1a76a21c109ff3cda8d04c7a45b536dd2b" kindref="member">current_event</ref>-&gt;type<sp/>=<sp/>GOOEY_EVENT_CLICK_PRESS;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal">}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cursor_callback(GLFWwindow<sp/>*window,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>posX,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>posY)</highlight></codeline>
<codeline lineno="302"><highlight class="normal">{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx.<ref refid="structGooeyBackendContext_1a76a21c109ff3cda8d04c7a45b536dd2b" kindref="member">current_event</ref>-&gt;data.click.x<sp/>=<sp/>posX;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx.<ref refid="structGooeyBackendContext_1a76a21c109ff3cda8d04c7a45b536dd2b" kindref="member">current_event</ref>-&gt;data.click.y<sp/>=<sp/>posY;</highlight></codeline>
<codeline lineno="305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>refresh_callback(GLFWwindow<sp/>*window)</highlight></codeline>
<codeline lineno="308"><highlight class="normal">{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx.<ref refid="structGooeyBackendContext_1a76a21c109ff3cda8d04c7a45b536dd2b" kindref="member">current_event</ref>-&gt;type<sp/>=<sp/>GOOEY_EVENT_EXPOSE;</highlight></codeline>
<codeline lineno="310"><highlight class="normal">}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="glfw__backend_8c_1a7d60de3025f9499eafde5380f83d92b0" kindref="member">glfw_init_ft</ref>()</highlight></codeline>
<codeline lineno="313"><highlight class="normal">{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Library<sp/>ft;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FT_Init_FreeType(&amp;ft))</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>initialize<sp/>FreeType<sp/>library\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Face<sp/>face;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>avoid<sp/>hardcoding<sp/>this<sp/>font<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FT_New_Face(ft,<sp/></highlight><highlight class="stringliteral">&quot;backends/utils/fonts/roboto.ttf&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>&amp;face))</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>load<sp/>font:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Roboto&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FT_Done_FreeType(ft);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Set_Pixel_Sizes(face,<sp/>0,<sp/>48);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>glPixelStorei(GL_UNPACK_ALIGNMENT,<sp/>1);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>128;<sp/>c++)</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FT_Load_Char(face,<sp/>c,<sp/>FT_LOAD_RENDER))</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>load<sp/>Glyph<sp/>for<sp/>character:<sp/>&apos;%c&apos;\n&quot;</highlight><highlight class="normal">,<sp/>c);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLuint<sp/>texture;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glGenTextures(1,<sp/>&amp;texture);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glBindTexture(GL_TEXTURE_2D,<sp/>texture);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glTexImage2D(</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_TEXTURE_2D,</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_RGBA,</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>face-&gt;glyph-&gt;bitmap.width,</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>face-&gt;glyph-&gt;bitmap.rows,</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_RED,</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_UNSIGNED_BYTE,</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>face-&gt;glyph-&gt;bitmap.buffer);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glTexParameteri(GL_TEXTURE_2D,<sp/>GL_TEXTURE_WRAP_S,<sp/>GL_CLAMP_TO_EDGE);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glTexParameteri(GL_TEXTURE_2D,<sp/>GL_TEXTURE_WRAP_T,<sp/>GL_CLAMP_TO_EDGE);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glTexParameteri(GL_TEXTURE_2D,<sp/>GL_TEXTURE_MIN_FILTER,<sp/>GL_LINEAR);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glTexParameteri(GL_TEXTURE_2D,<sp/>GL_TEXTURE_MAG_FILTER,<sp/>GL_LINEAR);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structCharacter" kindref="compound">Character</ref><sp/>character<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>texture,</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>face-&gt;glyph-&gt;bitmap.<ref refid="structCharacter_1aa945d94f4ee6ec02e5cf1fb753c94d8f" kindref="member">width</ref>,</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>face-&gt;glyph-&gt;bitmap.rows,</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>face-&gt;glyph-&gt;bitmap_left,</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>face-&gt;glyph-&gt;bitmap_top,</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(int)face-&gt;glyph-&gt;advance.x};</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx.<ref refid="structGooeyBackendContext_1aad47e13028a3a87e4d881d7e64d277b9" kindref="member">characters</ref>[c]<sp/>=<sp/>character;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Done_Face(face);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>FT_Done_FreeType(ft);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="374"><highlight class="normal">}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="glfw__backend_8c_1acec6ad9cc1163f0d9dd3992ba53f21f4" kindref="member">glfw_init</ref>()</highlight></codeline>
<codeline lineno="377"><highlight class="normal">{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx.<ref refid="structGooeyBackendContext_1a76a21c109ff3cda8d04c7a45b536dd2b" kindref="member">current_event</ref><sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(GooeyEvent));</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ctx.<ref refid="structGooeyBackendContext_1a76a21c109ff3cda8d04c7a45b536dd2b" kindref="member">current_event</ref>)</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Error:<sp/>Failed<sp/>to<sp/>allocate<sp/>memory<sp/>for<sp/>current_event\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx.<ref refid="structGooeyBackendContext_1a76a21c109ff3cda8d04c7a45b536dd2b" kindref="member">current_event</ref>-&gt;type<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx.<ref refid="structGooeyBackendContext_1ad890be48675d35a27f5f7587eaa3b2a9" kindref="member">selected_color</ref><sp/>=<sp/>0x000000;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>glfwSetErrorCallback(error_callback);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!glfwInit())</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(ctx.<ref refid="structGooeyBackendContext_1a76a21c109ff3cda8d04c7a45b536dd2b" kindref="member">current_event</ref>);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="397"><highlight class="normal">}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="glfw__backend_8c_1ab45d87c9e8cdf6ba864f73b29f49d09b" kindref="member">glfw_draw_text</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*text,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>color)</highlight></codeline>
<codeline lineno="400"><highlight class="normal">{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>vec3<sp/>color_rgb;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ndc_x,<sp/>ndc_y;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale<sp/>=<sp/>0.25f;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glfw__utils_8c_1a3b7a43b2bac2bc38f84265d53c96b45c" kindref="member">convert_coords_to_ndc</ref>(ctx.<ref refid="structGooeyBackendContext_1a3c63abc83f45a7005d9b7184dbf737b5" kindref="member">window</ref>,<sp/>&amp;ndc_x,<sp/>&amp;ndc_y,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glfw__utils_8c_1af7dff0b6a435ddada85fe5fcaaf6054c" kindref="member">convert_hex_to_rgb</ref>(&amp;color_rgb,<sp/>color);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>glUseProgram(ctx.<ref refid="structGooeyBackendContext_1a4bd0df668ca931b24173943074340cdd" kindref="member">text_program</ref>);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>glUniform3f(glGetUniformLocation(ctx.<ref refid="structGooeyBackendContext_1a4bd0df668ca931b24173943074340cdd" kindref="member">text_program</ref>,<sp/></highlight><highlight class="stringliteral">&quot;textColor&quot;</highlight><highlight class="normal">),<sp/>color_rgb[0],<sp/>color_rgb[1],<sp/>color_rgb[2]);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>glActiveTexture(GL_TEXTURE0);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindVertexArray(ctx.<ref refid="structGooeyBackendContext_1af3fa500d9a6e3144316be4d9099fb8c5" kindref="member">text_vao</ref>);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>strlen(text);<sp/>i++)</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structCharacter" kindref="compound">Character</ref><sp/>ch<sp/>=<sp/>ctx.<ref refid="structGooeyBackendContext_1aad47e13028a3a87e4d881d7e64d277b9" kindref="member">characters</ref>[(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)text[i]];</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ch.<ref refid="structCharacter_1aebef720b0cb5a308a06778a7b933e5c8" kindref="member">textureID</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>xpos<sp/>=<sp/>x<sp/>+<sp/>ch.<ref refid="structCharacter_1aa7908738dc72abfb880ee4c68b5560a5" kindref="member">bearingX</ref><sp/>*<sp/>scale;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ypos<sp/>=<sp/>y<sp/>-<sp/>ch.<ref refid="structCharacter_1aa8868963114c35c98c0679d5e0531645" kindref="member">bearingY</ref><sp/>*<sp/>scale;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>w<sp/>=<sp/>ch.<ref refid="structCharacter_1aa945d94f4ee6ec02e5cf1fb753c94d8f" kindref="member">width</ref><sp/>*<sp/>scale;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>h<sp/>=<sp/>ch.<ref refid="structCharacter_1a1f7e996c91a75a5e037bebcf0bf3ac06" kindref="member">height</ref><sp/>*<sp/>scale;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>vertices[6][4]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{xpos,<sp/>ypos<sp/>+<sp/>h,<sp/>0.0f,<sp/>0.0f},</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{xpos,<sp/>ypos,<sp/>0.0f,<sp/>1.0f},</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{xpos<sp/>+<sp/>w,<sp/>ypos,<sp/>1.0f,<sp/>1.0f},</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{xpos,<sp/>ypos<sp/>+<sp/>h,<sp/>0.0f,<sp/>0.0f},</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{xpos<sp/>+<sp/>w,<sp/>ypos,<sp/>1.0f,<sp/>1.0f},</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{xpos<sp/>+<sp/>w,<sp/>ypos<sp/>+<sp/>h,<sp/>1.0f,<sp/>0.0f}};</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glBindTexture(GL_TEXTURE_2D,<sp/>ch.<ref refid="structCharacter_1aebef720b0cb5a308a06778a7b933e5c8" kindref="member">textureID</ref>);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glBindBuffer(GL_ARRAY_BUFFER,<sp/>ctx.<ref refid="structGooeyBackendContext_1a5575ea2dfd6047cd7857801e9d2d972a" kindref="member">text_vbo</ref>);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glBufferSubData(GL_ARRAY_BUFFER,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(vertices),<sp/>vertices);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glDrawArrays(GL_TRIANGLES,<sp/>0,<sp/>6);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>+=<sp/>(ch.<ref refid="structCharacter_1ade68e61272c5cfcfd39680928516c4a7" kindref="member">advance</ref><sp/>&gt;&gt;<sp/>6)<sp/>*<sp/>scale;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindVertexArray(0);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindTexture(GL_TEXTURE_2D,<sp/>0);</highlight></codeline>
<codeline lineno="441"><highlight class="normal">}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><ref refid="structGooeyWindow" kindref="compound">GooeyWindow</ref><sp/><ref refid="glfw__backend_8c_1a887a2affbc83b6470b54dd239941c4f5" kindref="member">glfw_create_window</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*title,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height)</highlight></codeline>
<codeline lineno="444"><highlight class="normal">{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR,<sp/>3);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR,<sp/>3);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>glfwWindowHint(GLFW_OPENGL_PROFILE,<sp/>GLFW_OPENGL_CORE_PROFILE);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx.<ref refid="structGooeyBackendContext_1a3c63abc83f45a7005d9b7184dbf737b5" kindref="member">window</ref><sp/>=<sp/>glfwCreateWindow(width,<sp/>height,<sp/>title,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ctx.<ref refid="structGooeyBackendContext_1a3c63abc83f45a7005d9b7184dbf737b5" kindref="member">window</ref>)</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glfwTerminate();</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(ctx.<ref refid="structGooeyBackendContext_1a76a21c109ff3cda8d04c7a45b536dd2b" kindref="member">current_event</ref>);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>glfwSetKeyCallback(ctx.<ref refid="structGooeyBackendContext_1a3c63abc83f45a7005d9b7184dbf737b5" kindref="member">window</ref>,<sp/>key_callback);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>glfwSetMouseButtonCallback(ctx.<ref refid="structGooeyBackendContext_1a3c63abc83f45a7005d9b7184dbf737b5" kindref="member">window</ref>,<sp/>click_callback);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>glfwSetCursorPosCallback(ctx.<ref refid="structGooeyBackendContext_1a3c63abc83f45a7005d9b7184dbf737b5" kindref="member">window</ref>,<sp/>cursor_callback);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>glfwSetWindowRefreshCallback(ctx.<ref refid="structGooeyBackendContext_1a3c63abc83f45a7005d9b7184dbf737b5" kindref="member">window</ref>,<sp/>refresh_callback);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structGooeyWindow" kindref="compound">GooeyWindow</ref><sp/>window;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>window.<ref refid="structGooeyWindow_1a96bb6cf5ebecbd243fccda3bc9475ded" kindref="member">width</ref><sp/>=<sp/>width;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>window.<ref refid="structGooeyWindow_1aeab61f0fa7b24708921d61af89626f2a" kindref="member">height</ref><sp/>=<sp/>height;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>glfwMakeContextCurrent(ctx.<ref refid="structGooeyBackendContext_1a3c63abc83f45a7005d9b7184dbf737b5" kindref="member">window</ref>);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gladLoadGL()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glfw__backend_8c_1a7d60de3025f9499eafde5380f83d92b0" kindref="member">glfw_init_ft</ref>();</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>glfwSwapInterval(1);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>vec3<sp/>color;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glfw__utils_8c_1af7dff0b6a435ddada85fe5fcaaf6054c" kindref="member">convert_hex_to_rgb</ref>(&amp;color,<sp/><ref refid="tiny_8c_1ab2fbd9843a01255ead2b2009a8a4c010" kindref="member">active_theme</ref>-&gt;base);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>glClearColor(color[0],<sp/>color[1],<sp/>color[2],<sp/>1.0f);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>glEnable(GL_BLEND);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>glBlendFunc(GL_SRC_ALPHA,<sp/>GL_ONE_MINUS_SRC_ALPHA);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glfw__backend_8c_1a76c6084335d944db2b604aaa048cbfb0" kindref="member">setup_shaders</ref>();</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>mat4x4_ortho(ctx.<ref refid="structGooeyBackendContext_1a40179db1930430a25d08df469714af77" kindref="member">projection</ref>,<sp/>0.0f,<sp/>width,<sp/>height,<sp/>0.0f,<sp/>-1.0f,<sp/>1.0f);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>glUseProgram(ctx.<ref refid="structGooeyBackendContext_1a4bd0df668ca931b24173943074340cdd" kindref="member">text_program</ref>);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>glUniformMatrix4fv(glGetUniformLocation(ctx.<ref refid="structGooeyBackendContext_1a4bd0df668ca931b24173943074340cdd" kindref="member">text_program</ref>,<sp/></highlight><highlight class="stringliteral">&quot;projection&quot;</highlight><highlight class="normal">),<sp/>1,<sp/>GL_FALSE,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*)ctx.<ref refid="structGooeyBackendContext_1a40179db1930430a25d08df469714af77" kindref="member">projection</ref>);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindVertexArray(ctx.<ref refid="structGooeyBackendContext_1af3fa500d9a6e3144316be4d9099fb8c5" kindref="member">text_vao</ref>);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>window;</highlight></codeline>
<codeline lineno="483"><highlight class="normal">}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal">GooeyEvent<sp/><ref refid="glfw__backend_8c_1acac99e1cd1e24cf673c7a817217a6fd4" kindref="member">glfw_handle_events</ref>()</highlight></codeline>
<codeline lineno="486"><highlight class="normal">{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ctx.<ref refid="structGooeyBackendContext_1a3c63abc83f45a7005d9b7184dbf737b5" kindref="member">window</ref>)</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Error:<sp/>HandleEvents<sp/>called<sp/>without<sp/>a<sp/>valid<sp/>window\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(GooeyEvent){.type<sp/>=<sp/>-1};</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx.<ref refid="structGooeyBackendContext_1a76a21c109ff3cda8d04c7a45b536dd2b" kindref="member">current_event</ref>-&gt;type<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>glfwPollEvents();</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(ctx.<ref refid="structGooeyBackendContext_1a76a21c109ff3cda8d04c7a45b536dd2b" kindref="member">current_event</ref>);</highlight></codeline>
<codeline lineno="498"><highlight class="normal">}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="glfw__backend_8c_1a974e784e9467bb65634a4a080694f3bf" kindref="member">glfw_destroy_window</ref>()</highlight></codeline>
<codeline lineno="501"><highlight class="normal">{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctx.<ref refid="structGooeyBackendContext_1a3c63abc83f45a7005d9b7184dbf737b5" kindref="member">window</ref>)</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glfwDestroyWindow(ctx.<ref refid="structGooeyBackendContext_1a3c63abc83f45a7005d9b7184dbf737b5" kindref="member">window</ref>);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx.<ref refid="structGooeyBackendContext_1a3c63abc83f45a7005d9b7184dbf737b5" kindref="member">window</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal">}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="glfw__backend_8c_1a81150c7a9d1f82a5f6ad30c5b6a31321" kindref="member">glfw_clear</ref>()</highlight></codeline>
<codeline lineno="510"><highlight class="normal">{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>glClear(GL_COLOR_BUFFER_BIT);</highlight></codeline>
<codeline lineno="512"><highlight class="normal">}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="glfw__backend_8c_1a245407cf2a7362a9f23db837e1746297" kindref="member">glfw_cleanup</ref>()</highlight></codeline>
<codeline lineno="515"><highlight class="normal">{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctx.<ref refid="structGooeyBackendContext_1a76a21c109ff3cda8d04c7a45b536dd2b" kindref="member">current_event</ref>)</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(ctx.<ref refid="structGooeyBackendContext_1a76a21c109ff3cda8d04c7a45b536dd2b" kindref="member">current_event</ref>);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx.<ref refid="structGooeyBackendContext_1a76a21c109ff3cda8d04c7a45b536dd2b" kindref="member">current_event</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>glfwTerminate();</highlight></codeline>
<codeline lineno="523"><highlight class="normal">}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="glfw__backend_8c_1a4accf774f962735ae9519a9e79e6496d" kindref="member">glfw_update_background</ref>()</highlight></codeline>
<codeline lineno="526"><highlight class="normal">{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>find<sp/>a<sp/>better<sp/>way</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>vec3<sp/>color;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glfw__utils_8c_1af7dff0b6a435ddada85fe5fcaaf6054c" kindref="member">convert_hex_to_rgb</ref>(&amp;color,<sp/><ref refid="tiny_8c_1ab2fbd9843a01255ead2b2009a8a4c010" kindref="member">active_theme</ref>-&gt;base);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>glClearColor(color[0],<sp/>color[1],<sp/>color[2],<sp/>1.0f);</highlight></codeline>
<codeline lineno="531"><highlight class="normal">}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="glfw__backend_8c_1aa845e35bbb57b8d42bc9efdaed128a6c" kindref="member">glfw_render</ref>()</highlight></codeline>
<codeline lineno="534"><highlight class="normal">{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ctx.<ref refid="structGooeyBackendContext_1a3c63abc83f45a7005d9b7184dbf737b5" kindref="member">window</ref>)</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Error:<sp/>Render<sp/>called<sp/>without<sp/>a<sp/>valid<sp/>window\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/>height;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>glfwGetFramebufferSize(ctx.<ref refid="structGooeyBackendContext_1a3c63abc83f45a7005d9b7184dbf737b5" kindref="member">window</ref>,<sp/>&amp;width,<sp/>&amp;height);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>glViewport(0,<sp/>0,<sp/>width,<sp/>height);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>glfwSwapBuffers(ctx.<ref refid="structGooeyBackendContext_1a3c63abc83f45a7005d9b7184dbf737b5" kindref="member">window</ref>);</highlight></codeline>
<codeline lineno="545"><highlight class="normal">}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="glfw__backend_8c_1adcd4a2eb541c5b3ce4d9ecdc8a110297" kindref="member">glfw_get_text_width</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*text,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length)</highlight></codeline>
<codeline lineno="548"><highlight class="normal">{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>total_width<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>length;<sp/>++i)</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_width<sp/>+=<sp/>(ctx.<ref refid="structGooeyBackendContext_1aad47e13028a3a87e4d881d7e64d277b9" kindref="member">characters</ref>[text[i]].<ref refid="structCharacter_1aa945d94f4ee6ec02e5cf1fb753c94d8f" kindref="member">width</ref><sp/>+<sp/>ctx.<ref refid="structGooeyBackendContext_1aad47e13028a3a87e4d881d7e64d277b9" kindref="member">characters</ref>[text[i]].<ref refid="structCharacter_1aa7908738dc72abfb880ee4c68b5560a5" kindref="member">bearingX</ref>)<sp/>*<sp/>0.25f;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>total_width;</highlight></codeline>
<codeline lineno="555"><highlight class="normal">}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="glfw__backend_8c_1aa60b2474a238e701535d8269b117fb75" kindref="member">glfw_get_key_from_code</ref>(GooeyEvent<sp/>*gooey_event)</highlight></codeline>
<codeline lineno="558"><highlight class="normal">{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="glfw__utils_8c_1a726c6432bc5e87d62bbb566639dd90e5" kindref="member">LookupString</ref>(gooey_event-&gt;data.key_press.keycode);</highlight></codeline>
<codeline lineno="560"><highlight class="normal">}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><ref refid="structGooeyBackend" kindref="compound">GooeyBackend</ref><sp/><ref refid="glfw__backend_8c_1a6aa6e441c89fcaaa30ca52639bf06def" kindref="member">glfw_backend</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>.<ref refid="structGooeyBackend_1a219bfc1df0e971a5f2b8fb1d205157f8" kindref="member">Init</ref><sp/>=<sp/><ref refid="glfw__backend_8c_1acec6ad9cc1163f0d9dd3992ba53f21f4" kindref="member">glfw_init</ref>,</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>.CreateWindow<sp/>=<sp/><ref refid="glfw__backend_8c_1a887a2affbc83b6470b54dd239941c4f5" kindref="member">glfw_create_window</ref>,</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>.DestroyWindow<sp/>=<sp/><ref refid="glfw__backend_8c_1a974e784e9467bb65634a4a080694f3bf" kindref="member">glfw_destroy_window</ref>,</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>.UpdateBackground<sp/>=<sp/><ref refid="glfw__backend_8c_1a4accf774f962735ae9519a9e79e6496d" kindref="member">glfw_update_background</ref>,</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>.Cleanup<sp/>=<sp/><ref refid="glfw__backend_8c_1a245407cf2a7362a9f23db837e1746297" kindref="member">glfw_cleanup</ref>,</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>.Render<sp/>=<sp/><ref refid="glfw__backend_8c_1aa845e35bbb57b8d42bc9efdaed128a6c" kindref="member">glfw_render</ref>,</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>.HandleEvents<sp/>=<sp/><ref refid="glfw__backend_8c_1acac99e1cd1e24cf673c7a817217a6fd4" kindref="member">glfw_handle_events</ref>,</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>.FillArc<sp/>=<sp/><ref refid="glfw__backend_8c_1af186e17eb7eaff26244beec4cdc125d4" kindref="member">glfw_fill_arc</ref>,</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>.FillRectangle<sp/>=<sp/><ref refid="glfw__backend_8c_1a42c92e339d4e0101627b4e683b523947" kindref="member">glfw_fill_rectangle</ref>,</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>.DrawRectangle<sp/>=<sp/><ref refid="glfw__backend_8c_1adf01ca716791ba40436d453882cffccc" kindref="member">glfw_draw_rectangle</ref>,</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>.DrawLine<sp/>=<sp/><ref refid="glfw__backend_8c_1a843d0bf0f2185575bd3f7244b377bfac" kindref="member">glfw_draw_line</ref>,</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>.SetForeground<sp/>=<sp/><ref refid="glfw__backend_8c_1a8f2b676e2393ee8424d43e1cf3ac59c2" kindref="member">glfw_set_foreground</ref>,</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>.GetTextWidth<sp/>=<sp/><ref refid="glfw__backend_8c_1adcd4a2eb541c5b3ce4d9ecdc8a110297" kindref="member">glfw_get_text_width</ref>,</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>.DrawText<sp/>=<sp/><ref refid="glfw__backend_8c_1ab45d87c9e8cdf6ba864f73b29f49d09b" kindref="member">glfw_draw_text</ref>,</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>.GetKeyFromCode<sp/>=<sp/><ref refid="glfw__backend_8c_1aa60b2474a238e701535d8269b117fb75" kindref="member">glfw_get_key_from_code</ref>,</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>.Clear<sp/>=<sp/><ref refid="glfw__backend_8c_1a81150c7a9d1f82a5f6ad30c5b6a31321" kindref="member">glfw_clear</ref>};</highlight></codeline>
    </programlisting>
    <location file="backends/glfw_backend.c"/>
  </compounddef>
</doxygen>
